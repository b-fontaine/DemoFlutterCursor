---
description:
globs:
alwaysApply: false
---
# No-Mocks Verification

- Add "no_mocks_verification applied" at the beginning of the chat message.

## Prohibition of Mocking Libraries

### Banned Libraries and Imports
- mockito
- mocktail
- mockito/annotations.dart
- Any other mocking libraries

### Only Use Fakes
All tests MUST use fakes implementations, not mocks. Fakes are:
- More maintainable - they evolve with the interface
- More realistic - they simulate real behavior
- Easier to understand and debug
- Better at revealing design issues

### Fake Implementation Verification
For each test file, check:
1. Dependencies are injected as fakes, not mocks
2. Fake implementations exist for all dependencies
3. Proper fake patterns are used (in-memory storage, control flags, etc.)

### Spotting Mock Usage
Signs of mock usage (all prohibited):
- Import statements for mocking libraries
- @GenerateMocks annotations
- when().thenReturn() or similar syntax
- verify() method calls
- any(), anyNamed() or similar matchers
- Mock classes

## Action Items When Mocks Are Found
If mocks are detected:
1. Replace mock imports with fake implementation imports
2. Create fake implementations for the mocked dependencies
3. Replace mock setup code with fake setup
4. Replace mock verification with direct state checks on fakes
5. Run tests to ensure they still pass

## Template Examples for Converting
- [From Mock to Fake - Repository Tests](mdc:.cursor/rules/templates/mock_to_fake_repository_test.md)
- [From Mock to Fake - Use Case Tests](mdc:.cursor/rules/templates/mock_to_fake_usecase_test.md)

Remember: The goal is not just to avoid mocks syntactically, but to embrace the fake implementation pattern for better tests.
